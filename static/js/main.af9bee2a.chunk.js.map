{"version":3,"sources":["reportWebVitals.ts","config/index.js","util.tsx","context/WalletModalContext.js","hooks/web3Hook.js","context/index.js","hooks/useWallet.tsx","assets/img/metamask.png","assets/img/trust.png","assets/img/coinbase.png","Layout.tsx","Staking/index.tsx","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","addrs","contracts","process","provider","ethers","providers","JsonRpcProvider","THCTokenContract","Contract","tokens","THC","address","abiTHC","THCStakingContract","staking","abiStaking","errHandler","err","console","log","code","tips","message","fromBigNum","value","d","parseFloat","utils","formatUnits","html","toast","position","autoClose","NETWORK_CHAIN_IDS","INFURA_ENDPOINT","walletconnect","WalletConnectConnector","infuraId","bridge","supportedChainIds","rpc","qrcode","pollingInterval","injected","InjectedConnector","walletlink","WalletLinkConnector","url","appName","WalletModalContext","createContext","open","toggleOpen","WalletModalProvider","children","useState","setOpen","triedEager","useWeb3React","activate","active","tried","setTried","useEffect","isAuthorized","undefined","catch","useEagerConnect","suppress","error","ethereum","window","on","handleConnect","handleChainChanged","chainId","handleAccountsChanged","accounts","length","handleNetworkChanged","networkId","removeListener","useInactiveListener","useCallback","Provider","WebContext","useWebContext","useContext","reducer","state","type","payload","INIT_STATE","Loading","disconnect_able","signer","balance","Network","tokenName","useReducer","dispatch","useMemo","handleError","NoEthereumProviderError","UnsupportedChainIdError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","toString","useWallet","connector","props","web3","Web3","currentProvider","eth","getAccounts","connect","isMetaMask","location","href","walletConnectProvider","Layout","account","React","scrolling","setScrolling","up","setUp","addEventListener","onScroll","scrollTop","scroll","document","body","WalletConnectModal","setWalletConnectModal","key","WalletModal","className","onClick","src","Meta","alt","Trust","Coinbase","id","to","slice","style","color","target","Staking","signedTokenContracts","setSignedTokenContracts","signedStakingContracts","setSignedStakingContracts","unStakeValue","setUnStakeValue","THCTotalAmountToWallet","setTHCTotalAmountToWallet","MaxTHCTotalAmountToWallet","setMaxTHCTotalAmountToWallet","setReady","library","ido","lockPeriod","apy","extendsLockOnRegistration","earlyUnstakeFee","unstakeFee","locked","stakedAmount","claimStatus","statusApp","setStatusApp","changeStatus","setSignedContracts","Web3Provider","getSigner","getBalance","MyContract","decimals","tokenDecimals","balanceOf","bigBal","THCBalanceOfWallet","Number","toFixed","getStakingInfo","stakers","stakeDate","nowUnixTime","nowTime","staked","stakes","stakingDate","period","handleStaking","stakeAmount","parseUnits","allowance","approve","sub","tx","wait","stake","unstaking","unstake","Claim","stakingMax","onChange","e","disabled","background","textAlign","NoMatch","maxWidth","margin","App","path","index","element","ReactDOM","render","StrictMode","getLibrary","getElementById"],"mappings":"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","file":"static/js/main.af9bee2a.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { ethers } from 'ethers';\r\nimport contracts from \"./contracts.json\"\r\nimport abiTHC from './abi/THCtoken.json'\r\nimport abiStaking from './abi/staking.json'\r\n\r\nconst rpc = process.env.REACT_APP_NETWORK_URL;\r\nconst chainid = process.env.REACT_APP_CHAIN_ID;\r\nconst addrs = contracts[chainid];\r\n\r\nconst provider = new ethers.providers.JsonRpcProvider(rpc);\r\n\r\nconst THCTokenContract = new ethers.Contract(addrs.tokens.THC.address, abiTHC, provider);\r\nconst THCStakingContract = new ethers.Contract(addrs.staking.THC, abiStaking, provider);\r\n\r\n\r\nexport {\r\n    provider,\r\n    THCTokenContract,\r\n    THCStakingContract\r\n}","import { toast } from 'react-toastify';\r\nimport { ethers } from \"ethers\"\r\nimport { THCTokenContract } from \"./config\";\r\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector';\r\nimport { InjectedConnector } from '@web3-react/injected-connector';\r\nimport { WalletLinkConnector } from '@web3-react/walletlink-connector';\r\n\r\nexport const errHandler = (err: any) => {\r\n\tif (err) {\r\n\t\tconsole.log(err)\r\n\t\tif (err.code === 4001) {\r\n\t\t\ttips(\"you have cancelled the subscription\")\r\n\t\t} else if (err.code === 'NETWORK_ERROR') {\r\n\t\t\ttips(\"Please check your network connection!\")\r\n\t\t} else {\r\n\t\t\ttips(err.message)\r\n\t\t}\r\n\t} else {\r\n\t\tconsole.log(\"ignore error\")\r\n\t\ttips(\"ignore error\")\r\n\t}\r\n}\r\n\r\n\r\nexport const tokenData = {\r\n\tTHC: {\r\n\t\tcontract: THCTokenContract,\r\n\t\taddress: THCTokenContract.address,\r\n\t\tdecimals: 9\r\n\t}\r\n\r\n}\r\n/**\r\n * change data type from Number to BigNum \r\n * @param {Number} value - data that need to be change\r\n * @param {Number} d - decimals\r\n */\r\n// @ts-ignore\r\nexport const toValue = (val: any, token: any) => ethers.utils.parseUnits((val).toString(), tokenData[token].decimals)\r\nexport const toBigNum = (value: any, d: any) => ethers.utils.parseUnits(Number(value).toFixed(d), d);\r\n// @ts-ignore\r\nexport const fromValue = (val: any, d: any) => Number(ethers.utils.formatUnits((val).toString(), tokenData[token].decimals))\r\nexport const fromBigNum = (value: any, d: any) => parseFloat(ethers.utils.formatUnits(value, d));\r\n\r\nexport const tips = (html: string) => {\r\n\ttoast(html, {\r\n\t\tposition: \"top-right\",\r\n\t\tautoClose: 2000,\r\n\t\t/* hideProgressBar: false, */\r\n\t\t/* closeOnClick: true,\r\n\t\tpauseOnHover: true, */\r\n\t\t/* draggable: true, */\r\n\t\t/* progress: undefined, */\r\n\t});\r\n}\r\n\r\n// export const NF = (num:number,p:number=2) => Number(num).toFixed(p);// .replace(/(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\");\r\nexport const NF = (num: number, p: number = 2) => Number(num).toFixed(p).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\nexport const TF = (time: number, offset: number = 2) => {\r\n\tlet iOffset = Number(offset);\r\n\tlet date = time === undefined ? new Date(Date.now() * 1000 + (3600000 * iOffset)) : (typeof time === 'number' ? new Date(time * 1000 + (3600000 * iOffset)) : new Date(+time + (3600000 * iOffset)));\r\n\tlet y = date.getUTCFullYear();\r\n\tlet m = date.getUTCMonth() + 1;\r\n\tlet d = date.getUTCDate();\r\n\tlet hh = date.getUTCHours();\r\n\tlet mm = date.getUTCMinutes();\r\n\tlet ss = date.getUTCSeconds();\r\n\tlet dt = (\"0\" + m).slice(-2) + \"-\" + (\"0\" + d).slice(-2);\r\n\tlet tt = (\"0\" + hh).slice(-2) + \":\" + (\"0\" + mm).slice(-2) + \":\" + (\"0\" + ss).slice(-2);\r\n\treturn y + '-' + dt + ' ' + tt;\r\n}\r\n\r\nexport const copyToClipboard = (text: string) => {\r\n\tvar textField = document.createElement('textarea')\r\n\ttextField.innerText = text\r\n\tdocument.body.appendChild(textField)\r\n\ttextField.select()\r\n\tdocument.execCommand('copy')\r\n\ttextField.remove()\r\n\ttips(text);\r\n};\r\n\r\nexport const NETWORK_CHAIN_IDS = {\r\n\tmainnet: 56,\r\n\tropsten: 3,\r\n\trinkeby: 4,\r\n\tgoerli: 5,\r\n\tkovan: 42,\r\n\tlocalhost: 1337,\r\n};\r\n\r\nexport const INFURA_ID = '9aa3d95b3bc440fa88ea12eaa4456161';\r\nexport const INFURA_ENDPOINT = 'https://mainnet.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161';\r\nexport const walletconnect = new WalletConnectConnector({\r\n\tinfuraId: INFURA_ID,\r\n\tbridge: 'https://bridge.walletconnect.org',\r\n\tsupportedChainIds: [NETWORK_CHAIN_IDS.mainnet],\r\n\trpc: { 1: INFURA_ENDPOINT },\r\n\tqrcode: true,\r\n\t// @ts-ignore\r\n\tpollingInterval: 8000,\r\n});\r\n\r\nexport const injected = new InjectedConnector({\r\n\tsupportedChainIds: [NETWORK_CHAIN_IDS.mainnet],  //, NETWORK_CHAIN_IDS.mainnet\r\n});\r\n\r\nexport const walletlink = new WalletLinkConnector({\r\n\turl: INFURA_ENDPOINT,\r\n\tappName: 'Transhuman coin Staking',\r\n\tsupportedChainIds: [NETWORK_CHAIN_IDS.mainnet, NETWORK_CHAIN_IDS.mainnet],\r\n});\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useEagerConnect, useInactiveListener } from '../hooks/web3Hook';\r\nimport { useState, createContext, useCallback } from 'react';\r\n\r\nexport const WalletModalContext = createContext({\r\n    open: false,\r\n    toggleOpen: () => null,\r\n});\r\n\r\nexport function WalletModalProvider({ children }) {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\r\n    const triedEager = useEagerConnect();\r\n\r\n    // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\r\n    useInactiveListener(!triedEager);\r\n\r\n    const toggleOpen = useCallback(() => {\r\n        setOpen(!open);\r\n    }, [open]);\r\n\r\n    return <WalletModalContext.Provider value={{ open, toggleOpen }}>{children}</WalletModalContext.Provider>;\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { injected } from '../util';\r\nexport function useEagerConnect() {\r\n\r\n  const { activate, active } = useWeb3React();\r\n\r\n  const [tried, setTried] = useState(false);\r\n\r\n  useEffect(() => {\r\n    injected.isAuthorized().then((isAuthorized) => {\r\n      if (isAuthorized) {\r\n        activate(injected, undefined, true).catch(() => {\r\n          setTried(true);\r\n        });\r\n      } else {\r\n        setTried(true);\r\n      }\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []); // intentionally only running on mount (make sure it's only mounted once :))\r\n\r\n  // if the connection worked, wait until we get confirmation of that to flip the flag\r\n  useEffect(() => {\r\n    if (!tried && active) {\r\n      setTried(true);\r\n    }\r\n  }, [tried, active]);\r\n\r\n  return tried;\r\n}\r\n\r\nexport function useInactiveListener(suppress = false) {\r\n  const { active, error, activate } = useWeb3React();\r\n  useEffect(() => {\r\n    const { ethereum } = window;\r\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\r\n      const handleConnect = () => {\r\n        console.log(\"Handling 'connect' event\");\r\n        activate(injected);\r\n      };\r\n      const handleChainChanged = (chainId) => {\r\n        console.log(\"Handling 'chainChanged' event with payload\", chainId);\r\n        activate(injected);\r\n      };\r\n      const handleAccountsChanged = (accounts) => {\r\n        console.log(\"Handling 'accountsChanged' event with payload\", accounts);\r\n        if (accounts.length > 0) {\r\n          activate(injected);\r\n          //   setTimeout(() => {\r\n          //     sendEth(0);\r\n          //   },\r\n          //     300);\r\n        }\r\n      };\r\n      const handleNetworkChanged = (networkId) => {\r\n        console.log(\"Handling 'networkChanged' event with payload\", networkId);\r\n        activate(injected);\r\n      };\r\n\r\n      ethereum.on('connect', handleConnect);\r\n      ethereum.on('chainChanged', handleChainChanged);\r\n      ethereum.on('accountsChanged', handleAccountsChanged);\r\n      ethereum.on('networkChanged', handleNetworkChanged);\r\n\r\n      return () => {\r\n        if (ethereum.removeListener) {\r\n          ethereum.removeListener('connect', handleConnect);\r\n          ethereum.removeListener('chainChanged', handleChainChanged);\r\n          ethereum.removeListener('accountsChanged', handleAccountsChanged);\r\n          ethereum.removeListener('networkChanged', handleNetworkChanged);\r\n        }\r\n      };\r\n    }\r\n  }, [active, error, suppress, activate]);\r\n}\r\n","import React, {\r\n    createContext,\r\n    useContext,\r\n    useReducer,\r\n    useMemo,\r\n    useCallback,\r\n    useEffect,\r\n} from \"react\";\r\nimport { ethers } from \"ethers\";\r\nconst WebContext = createContext();\r\n\r\nexport function useWebContext() {\r\n    return useContext(WebContext);\r\n}\r\n\r\nfunction reducer(state, { type, payload }) {\r\n    return {\r\n        ...state,\r\n        [type]: payload\r\n    }\r\n}\r\n// 56  BSC\r\n// 1   Ethereum\r\n\r\nconst INIT_STATE = {\r\n    Loading: true,\r\n    disconnect_able: false,\r\n    signer: {},\r\n    provider: {},\r\n    balance: \"0\",\r\n    Network: [],\r\n    tokenName: 'avalanche'\r\n};\r\n\r\n\r\nexport default function Provider({ children }) {\r\n    const [state, dispatch] = useReducer(reducer, INIT_STATE)\r\n\r\n\r\n    return (\r\n        <WebContext.Provider\r\n            value={useMemo(\r\n                () => [\r\n                    state,\r\n                    {\r\n                        dispatch\r\n                    }\r\n                ],\r\n                [state]\r\n            )}\r\n        >\r\n            {children}\r\n        </WebContext.Provider>\r\n    );\r\n}","import { useWeb3React, UnsupportedChainIdError } from '@web3-react/core';\r\n\r\nimport { injected, walletconnect, walletlink, tips } from '../util';\r\nimport Web3 from 'web3';\r\nimport {\r\n    NoEthereumProviderError,\r\n    UserRejectedRequestError as UserRejectedRequestErrorInjected,\r\n} from '@web3-react/injected-connector';\r\nimport { UserRejectedRequestError as UserRejectedRequestErrorWalletConnect } from '@web3-react/walletconnect-connector';\r\nimport { useEffect } from 'react';\r\n\r\nconst handleError = (error: any) => {\r\n    if (error instanceof NoEthereumProviderError) {\r\n        return tips(\r\n            'No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.'\r\n        );\r\n    } else if (error instanceof UnsupportedChainIdError) {\r\n        return tips(\"Network Error, Please connect to BSC Mainnet\");\r\n        console.log(error);\r\n    } else if (\r\n        error instanceof UserRejectedRequestErrorInjected ||\r\n        error instanceof UserRejectedRequestErrorWalletConnect\r\n    ) {\r\n        return tips('Please authorize this website to access your BSC account.');\r\n    } else if ((error).code === -32002) {\r\n        return tips('Already processing ethereum request Accounts. Please accept the request.');\r\n    } else {\r\n        console.error(error.toString());\r\n        return tips('An unknown error occurred. Check the console for more details.');\r\n    }\r\n};\r\n\r\nexport const useWallet = () => {\r\n    const { activate, connector, ...props } = useWeb3React();\r\n    useEffect(() => {\r\n        const { ethereum } = window;\r\n\r\n        if (ethereum) {\r\n            (async () => {\r\n                try {\r\n                    // @ts-ignore\r\n                    const web3 = new Web3(ethereum.currentProvider || (window).web3.currentProvider);\r\n\r\n                    const accounts = await web3.eth.getAccounts();\r\n                    if (accounts.length > 0) {\r\n                        await activate(injected, (error) => handleError(error));\r\n                    } else if (accounts.length > 0) {\r\n                        return tips('Please Connect Metamask Wallet');\r\n                    }\r\n                } catch (err) {\r\n                    // Handle Error\r\n                    handleError(err);\r\n                }\r\n            })();\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n    const connect = async (type: any) => {\r\n        try {\r\n            if (type === 'injected') {\r\n                const { ethereum } = window;\r\n                // @ts-ignore\r\n                if (window.web3.currentProvider.isMetaMask) {\r\n                    console.log(\"Metamask is installed\");\r\n                } else {\r\n                    window.location.href = \"https://metamask.io/download\";\r\n                }\r\n                if (!ethereum) {\r\n                    return tips(\r\n                        'No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.'\r\n                    );\r\n                }\r\n                return await activate(injected, undefined, true);\r\n            }\r\n\r\n            if (type === 'walletconnect') {\r\n                console.log(\"wallet connection\", walletconnect);\r\n                // @ts-ignore\r\n                return await activate(walletconnect, undefined, true, (error) => handleError(error));\r\n            }\r\n\r\n            if (type === 'walletlink') {\r\n                // @ts-ignore\r\n                return await activate(walletlink, undefined, true, (error) => handleError(error));\r\n            }\r\n        } catch (err) {\r\n            console.log('Connect wallet err', err);\r\n\r\n            // @ts-ignore\r\n            walletconnect.walletConnectProvider = null;\r\n            handleError(err);\r\n\r\n        }\r\n    };\r\n\r\n    return { ...props, connector, connect };\r\n};\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/metamask.5ab39d28.png\";","export default __webpack_public_path__ + \"static/media/trust.1a83c4b6.png\";","export default __webpack_public_path__ + \"static/media/coinbase.069f6c82.png\";","import React, { useEffect, useState } from 'react';\r\nimport { Link, Outlet } from 'react-router-dom';\r\n// import WalletConnect from \"@walletconnect/client\";//add\r\n// import WalletConnectQRCodeModal from \"@walletconnect/qrcode-modal\";//add\r\nimport { errHandler, tips, /* toValue, */ fromValue, fromBigNum, walletconnect } from './util';\r\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core';\r\nimport { useWallet } from './hooks/useWallet';\r\n\r\n\r\nimport \"./layout.scss\"\r\nimport \"./assets/css/stars.css\"\r\nimport Meta from './assets/img/metamask.png';\r\nimport Trust from './assets/img/trust.png';\r\nimport Coinbase from './assets/img/coinbase.png';\r\nimport { useWebContext } from \"./context\";\r\n\r\n\r\nconst Layout = (props: any) => {\r\n\tconst { active, connect, chainId } = useWallet();\r\n\tconst { account } = useWeb3React();\r\n\tconst [scrolling, setScrolling] = React.useState<boolean>(false);\r\n\tconst [up, setUp] = React.useState<boolean>(false);\r\n\tconst { activate, connector } = useWeb3React();\r\n\tconst [state, { dispatch }] = useWebContext();\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.addEventListener('scroll', onScroll, true);\r\n\t}, [])\r\n\tlet scrollTop = 0;\r\n\tconst onScroll = () => {\r\n\t\tconst scroll = document.body.scrollTop;\r\n\t\tif (scroll > 80) {\r\n\t\t\tif (scroll > scrollTop) {\r\n\t\t\t\tsetScrolling(true);\r\n\t\t\t\tsetUp(false);\r\n\t\t\t} else {\r\n\t\t\t\tsetUp(true);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsetScrolling(false);\r\n\t\t\tsetUp(false);\r\n\t\t}\r\n\t\tscrollTop = scroll;\r\n\t}\r\n\r\n\tconst [WalletConnectModal, setWalletConnectModal] = useState(false);\r\n\r\n\tconst handleConnect = async (key: string) => {\r\n\t\ttry {\r\n\t\t\tawait connect(key);\r\n\t\t\tsetWalletConnectModal(!WalletConnectModal)\r\n\t\t\tif (account !== undefined) {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: \"disconnect_able\",\r\n\t\t\t\t\tpayload: true\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: \"disconnect_able\",\r\n\t\t\t\t\tpayload: false\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t//wallet modal cancel\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log({ err });\r\n\t\t}\r\n\t};\r\n\tconst WalletDisconectCall = () => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'disconnect_able',\r\n\t\t\tpayload: false\r\n\t\t})\r\n\t}\r\n\r\n\tconst WalletModal = () => {\r\n\t\treturn (\r\n\t\t\t<div className='modal-continer' >\r\n\t\t\t\t<div className='modal-back' onClick={() => setWalletConnectModal(false)}></div>\r\n\r\n\t\t\t\t<div className=\"modal-body wallet-modal\" >\r\n\t\t\t\t\t<div className='justify'>\r\n\t\t\t\t\t\t<div className='wallet-icon-hover'>\r\n\t\t\t\t\t\t\t<a onClick={() => handleConnect('injected')}>\r\n\t\t\t\t\t\t\t\t<img src={Meta} className='justify wallet-imgs' alt='metamask' />\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='wallet-icon-hover'>\r\n\t\t\t\t\t\t\t<a onClick={() => handleConnect('walletconnect')}>\r\n\t\t\t\t\t\t\t\t<img src={Trust} className='justify wallet-imgs' alt='Trust' />\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='justify'>\r\n\t\t\t\t\t\t\t<div className='wallet-icon-hover'>\r\n\t\t\t\t\t\t\t\t<a onClick={() => handleConnect('walletlink')}>\r\n\t\t\t\t\t\t\t\t\t<img src={Coinbase} className='justify wallet-imgs' alt='Trust' />\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tif (account !== undefined) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: \"disconnect_able\",\r\n\t\t\t\tpayload: true\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: \"disconnect_able\",\r\n\t\t\t\tpayload: false\r\n\t\t\t});\r\n\t\t}\r\n\t\tconsole.log(chainId)\r\n\t}, [account, chainId])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<header className={'smart-scroll' + (scrolling ? ' scrolling' : '') + (up ? ' up' : '')}>\r\n\t\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t\t<div className=\"background\">\r\n\t\t\t\t\t\t<div id=\"stars\"></div>\r\n\t\t\t\t\t\t<div id=\"stars2\"></div>\r\n\t\t\t\t\t\t<div id=\"stars3\"></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<nav className=\"navbar navbar-expand-md navbar-dark\">\r\n\t\t\t\t\t\t<Link className=\"navbar-brand heading-black\" to=\"./\">\r\n\t\t\t\t\t\t\tTHC Staking\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t{/* <button onClick={() => setWalletConnectModal(true)} className=\"navbar-toggler navbar-toggler-right border-0 collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-grid\"><rect x=\"3\" y=\"3\" width=\"7\" height=\"7\"></rect><rect x=\"14\" y=\"3\" width=\"7\" height=\"7\"></rect><rect x=\"14\" y=\"14\" width=\"7\" height=\"7\"></rect><rect x=\"3\" y=\"14\" width=\"7\" height=\"7\"></rect></svg>\r\n\t\t\t\t\t\t</button> */}\r\n\t\t\t\t\t\t<div className=\"navbar-collapse collapse dis-f\">\r\n\t\t\t\t\t\t\t<ul className=\"navbar-nav ml-auto flex-align-center align-items-center\">\r\n\t\t\t\t\t\t\t\t{/* <li className=\"nav-item\">\r\n\t\t\t\t\t\t\t\t\t<Link className=\"nav-link page-scroll\" to=\"./\">Home</Link>\r\n\t\t\t\t\t\t\t\t</li> */}\r\n\t\t\t\t\t\t\t\t{/* <li className=\"nav-item\">\r\n\t\t\t\t\t\t\t\t\t<Link className=\"nav-link page-scroll\" to=\"./staking\">Staking</Link>\r\n\t\t\t\t\t\t\t\t</li> */}\r\n\t\t\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t\t\t<a className=\"nav-link page-scroll p-0\">\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tstate.disconnect_able ?\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button onClick={() => { WalletDisconectCall() }} className=\"btn btn-primary d-inline-flex flex-row align-items-center\" id=\"loginButton\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisconnect\r\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button onClick={() => setWalletConnectModal(true)} className=\"btn btn-primary d-inline-flex flex-row align-items-center\" id=\"loginButton\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tWallet Connect\r\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t\t\t<a className=\"nav-link page-scroll p-0\">\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tstate.disconnect_able && account && account.length !== 0 && account.slice(0, 4) + '...' + account.slice(account.length - 4, account.length)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t{/* account.slice(0, 4) + '...' + account.slice(account.length - 4, account.length) */}\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</nav>\r\n\t\t\t\t</div>\r\n\t\t\t</header>\r\n\t\t\t<main>\r\n\t\t\t\t{props.children}\r\n\t\t\t</main>\r\n\r\n\t\t\t<footer>\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-sm-5 mr-auto\">\r\n\t\t\t\t\t\t\t<h5>What is The Fire Under Transhuman Coin?</h5>\r\n\t\t\t\t\t\t\t<p className=\"text-muted\">Transhumanism is a philosophical movement devoted to promoting the research and development of robust human-enhancement technologies. Such technologies would augment or increase human sensory reception, emotive ability, or cognitive capacity as well as radically improve human health and extend human life spans.</p>\r\n\t\t\t\t\t\t\t<br /><br />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-sm-2\">\r\n\t\t\t\t\t\t\t<h5 style={{ color: \"#f2a900\" }}>Social</h5>\r\n\t\t\t\t\t\t\t<ul className=\"list-unstyled\">\r\n\t\t\t\t\t\t\t\t<li><a style={{ color: \"#f2a900\" }} target='_blank' href=\"http://t.me/buytranshumancoin\">Telegram</a></li>\r\n\t\t\t\t\t\t\t\t<li><a style={{ color: \"#f2a900\" }} target='_blank' href=\"https://discord.gg/mj72jmyMTw\">Discord</a></li>\r\n\t\t\t\t\t\t\t\t<li><a style={{ color: \"#f2a900\" }} target='_blank' href=\"https://www.twitter.com/transhumancoin\">Twitter</a></li>\r\n\t\t\t\t\t\t\t\t<li><a style={{ color: \"#f2a900\" }} target='_blank' href=\"https://coinmarketcap.com/currencies/transhuman-coin/\">Coin Market Cap</a></li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-sm-2\">\r\n\t\t\t\t\t\t\t<h5 style={{ color: \"cyan\" }}>Transhuman Coin</h5>\r\n\t\t\t\t\t\t\t<ul className=\"list-unstyled\">\r\n\t\t\t\t\t\t\t\t<li><a style={{ color: \"cyan\" }} target='_blank' href=\"https://www.transhumancoin.finance\">Transhuman Coin</a></li>\r\n\t\t\t\t\t\t\t\t<li><a style={{ color: \"cyan\" }} target='_blank' href=\"https://p2p.valid.finance\">Exchange Site</a></li>\r\n\t\t\t\t\t\t\t\t<li><a style={{ color: \"cyan\" }} target='_blank' href=\"https://valid.finance\">DeFi Platform</a></li>\r\n\t\t\t\t\t\t\t\t<li><a style={{ color: \"cyan\" }} target='_blank' href=\"https://www.transhumancoin.finance/whitepaperthc.pdf\">Read WhitePaper</a></li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-sm-2\">\r\n\t\t\t\t\t\t\t<h5 style={{ color: \"limegreen\" }}>Staking Contract</h5>\r\n\t\t\t\t\t\t\t<ul className=\"list-unstyled\">\r\n\t\t\t\t\t\t\t\t<li><a style={{ color: \"limegreen\" }} target='_blank' href=\"https://bscscan.com/address/#code\">Contract</a></li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"row mt-5\">\r\n\t\t\t\t\t\t<div className=\"col-12 text-muted text-center small-xl\">\r\n\t\t\t\t\t\t\t© 2022 - All Rights Reserved. Transhuman Coin\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</footer>\r\n\r\n\t\t\t{WalletConnectModal === true\r\n\t\t\t\t? <WalletModal />\r\n\t\t\t\t: <></>\r\n\t\t\t}\r\n\r\n\t\t\t<Outlet />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Layout","import React, { useState, useEffect } from 'react'\r\nimport './index.scss'\r\nimport '../responsive.scss'\r\nimport {\r\n    THCTokenContract, THCStakingContract,\r\n} from \"../config\"\r\nimport { errHandler, tips, /* toValue, */ fromValue, fromBigNum } from '../util';\r\nimport { ethers } from 'ethers';\r\nimport { Link, Outlet } from 'react-router-dom';\r\nimport { useWallet } from \"../hooks/useWallet\";\r\nimport web3 from 'web3';\r\nimport { useWebContext } from \"../context\";\r\n\r\ninterface IDOType {\r\n    lockPeriod: number\r\n    apy: number\r\n    extendsLockOnRegistration: boolean\r\n    earlyUnstakeFee: number\r\n    unstakeFee: number\r\n    locked: boolean\r\n}\r\ninterface StakingStatus {\r\n    ido: IDOType\r\n    balance: number\r\n    stakedAmount: number\r\n    THCTotalAmountToWallet: number\r\n    claimStatus: boolean\r\n}\r\n\r\n\r\nconst Staking = () => {\r\n    const [state, { dispatch }] = useWebContext();\r\n    const [signedTokenContracts, setSignedTokenContracts] = useState(THCTokenContract);\r\n    const [signedStakingContracts, setSignedStakingContracts] = useState(THCStakingContract);\r\n    const [unStakeValue, setUnStakeValue] = useState(0);\r\n    const [THCTotalAmountToWallet, setTHCTotalAmountToWallet] = useState(0);\r\n    const [MaxTHCTotalAmountToWallet, setMaxTHCTotalAmountToWallet] = useState(0);\r\n\r\n    const [ready, setReady] = useState(false);\r\n    const { connect, account, active, library, chainId } = useWallet();\r\n    const [statusApp, setStatusApp] = React.useState<StakingStatus>({\r\n        ido: {\r\n            lockPeriod: 7,\r\n            apy: 1.2,\r\n            extendsLockOnRegistration: true,\r\n            earlyUnstakeFee: 36,\r\n            unstakeFee: 6,\r\n            locked: false,\r\n        },\r\n        balance: 0,\r\n        stakedAmount: 0,\r\n        THCTotalAmountToWallet: 0,\r\n        claimStatus: false,\r\n    })\r\n\r\n    const changeStatus = (lockPeriod: number, apy: number) => {\r\n        setStatusApp({ ...statusApp, ido: { ...statusApp.ido, lockPeriod: lockPeriod, apy: apy } })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setSignedContracts = async () => {\r\n            try {\r\n                const provider = new ethers.providers.Web3Provider(library.provider);\r\n                const signer = await provider.getSigner();\r\n                var signedTokenContracts = (THCTokenContract).connect(signer);\r\n                var signedStakingContracts = (THCStakingContract).connect(signer);\r\n\r\n                setSignedTokenContracts(signedTokenContracts);\r\n                setSignedStakingContracts(signedStakingContracts);\r\n                setReady(true);\r\n            } catch (err) {\r\n                errHandler(err);\r\n            }\r\n        }\r\n        if (active) {\r\n            setSignedContracts();\r\n        }\r\n    }, [account, chainId])\r\n\r\n    const getBalance = async () => {\r\n        try {\r\n            if (active) {\r\n                var provider = new ethers.providers.Web3Provider(library.provider);\r\n                const signer = provider.getSigner();\r\n                var MyContract = THCTokenContract.connect(signer);\r\n                let tokenDecimals = (await MyContract.decimals()).toString();\r\n                let balance = await MyContract.balanceOf(account);\r\n                let bigBal = fromBigNum(balance, tokenDecimals);\r\n                console.log(bigBal)\r\n                // setStatusApp({ ...statusApp, stakeValue: statusApp.balance })\r\n                let THCBalanceOfWallet = Number(bigBal.toFixed(3));\r\n                setTHCTotalAmountToWallet(THCBalanceOfWallet);\r\n            } else if (!active) {\r\n                return tips('Please Connect Metamask Wallet');\r\n            }\r\n        } catch (err) {\r\n            console.log(\"context : getBalance error\", err);\r\n            // toast.error(\"context : getBalance error\", err);\r\n        }\r\n    }\r\n    const getStakingInfo = async () => {\r\n        try {\r\n            const provider = new ethers.providers.Web3Provider(library.provider);\r\n            const signer = await provider.getSigner();\r\n            var signedTokenContracts = (THCTokenContract).connect(signer);\r\n            var signedStakingContracts = (THCStakingContract).connect(signer);\r\n\r\n            var stakeDate = await signedStakingContracts.stakers(account);\r\n            var nowTime = await signedStakingContracts.nowUnixTime();\r\n            let tokenDecimals = (await signedTokenContracts.decimals()).toString();\r\n            console.log('stakeDate : ');\r\n            console.log(stakeDate);\r\n            // console.log('nowTime', nowTime);\r\n            // console.log('nowTime-', Number(nowTime));\r\n\r\n            // console.log('stakeDate.stakingDate', stakeDate.stakingDate);\r\n            // console.log('Number(stakeDate.stakingDate)', Number(stakeDate.stakingDate));\r\n\r\n            // console.log('stakeDate.stakes', stakeDate.stakes);\r\n\r\n            // console.log(typeof tokenDecimals)\r\n            // console.log('stakeDate.stakes', fromBigNum(stakeDate.stakes, Number(tokenDecimals)));\r\n\r\n            // console.log('(stakeDate.period) ', stakeDate.period);\r\n            // console.log('number(stakedate.period) ', Number(stakeDate.period));\r\n            let staked = fromBigNum(stakeDate.stakes, tokenDecimals);\r\n            console.log('typeof staked : ', typeof staked);\r\n\r\n            if (staked > 0) {\r\n                setUnStakeValue(staked);\r\n            }\r\n            // stakeDate.stakingDate -> unix time (1970.1.1 second)\r\n            // stakeDate.period -> staking date (7 , 30 , 90)\r\n            if (Number(nowTime) - Number(stakeDate.stakingDate) < (Number(stakeDate.period) * 3600 * 24)) {\r\n                setStatusApp({ ...statusApp, claimStatus: false });\r\n                // not claim\r\n            } else {\r\n                // you can receive claim\r\n                setStatusApp({ ...statusApp, claimStatus: true });\r\n            }\r\n\r\n            if (Number(stakeDate.stakingDate) !== 0) {\r\n                setStatusApp({ ...statusApp, ido: { ...statusApp.ido, locked: true } });\r\n            } else {\r\n                setStatusApp({ ...statusApp, ido: { ...statusApp.ido, locked: false } });\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!state.disconnect_able) {\r\n            setStatusApp({ ...statusApp, ido: { ...statusApp.ido, locked: false } });\r\n        } else {\r\n            getStakingInfo()\r\n        }\r\n    }, [state.disconnect_able])\r\n\r\n    useEffect(() => {\r\n        getStakingInfo();\r\n        getBalance();\r\n    }, [account])\r\n\r\n    const handleStaking = async () => {\r\n        try {\r\n            if (chainId !== 56) return tips(\"Please change network to your wallet.\");\r\n            if (MaxTHCTotalAmountToWallet === 0) return tips(\"Please enter the amount of THC you want to stake\");\r\n            if (MaxTHCTotalAmountToWallet < 30000) return tips(\"Hi, you can't stake less than 30,000 THC\");\r\n            if (MaxTHCTotalAmountToWallet > 15000000) return tips(\"Hey! You can't stake more than 15,000,000 THC\");\r\n\r\n            if (!active) return tips(\"Please connect your wallet\");\r\n            // if (loading) return tips(\"in progress\")\r\n            // setLoading(true);\r\n\r\n            // THC token check on users wallet\r\n            if (THCTotalAmountToWallet <= 0) return tips(\"Hi, You do not have enough THC Token to stake.\");\r\n            if (THCTotalAmountToWallet < MaxTHCTotalAmountToWallet) return tips(\"You have entered much amount than your wallet amount.\");\r\n            if (THCTotalAmountToWallet >= MaxTHCTotalAmountToWallet) {\r\n                if (statusApp.ido.locked) {\r\n                    return tips(\"Already created\");\r\n                } else {\r\n                    let tokenDecimals = (await signedTokenContracts.decimals()).toString();\r\n                    let stakeAmount = ethers.utils.parseUnits((MaxTHCTotalAmountToWallet).toString(), tokenDecimals)\r\n                    var allowance = await signedTokenContracts.allowance(account, signedStakingContracts.address);\r\n                    if (allowance.toString() !== \"0\" && allowance < stakeAmount) {\r\n                        stakeAmount = allowance;\r\n                    }\r\n                    if (allowance < stakeAmount) {\r\n                        var tx = await signedTokenContracts.approve(signedStakingContracts.address, stakeAmount.sub(allowance))\r\n                        if (tx != null) {\r\n                            await tx.wait();\r\n                        }\r\n                    }\r\n\r\n                    await staking(stakeAmount);\r\n                }\r\n            }\r\n\r\n        } catch (err) {\r\n            errHandler(err)\r\n        }\r\n        // setLoading(false);\r\n    }\r\n\r\n    const staking = async (stakeAmount: any) => {\r\n        try {\r\n            console.log('statusApp.ido.lockPeriod, stakeAmount')\r\n            console.log(statusApp.ido.lockPeriod, stakeAmount)\r\n            var tx = await signedStakingContracts.stake(statusApp.ido.lockPeriod, stakeAmount)\r\n            if (tx != null) {\r\n                await tx.wait();\r\n                tips(\"Staking account created. Success!\")\r\n                // staking success\r\n                setStatusApp({ ...statusApp, ido: { ...statusApp.ido, locked: true } });\r\n                getBalance();\r\n                getStakingInfo();\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            errHandler(error)\r\n\r\n        }\r\n    }\r\n\r\n    const approve = () => {\r\n\r\n    }\r\n\r\n    const unstaking = async () => {\r\n        const provider = new ethers.providers.Web3Provider(library.provider);\r\n        const signer = await provider.getSigner();\r\n        var signedStakingContracts = (THCStakingContract).connect(signer);\r\n\r\n        if (!active) return tips(\"Please connect your wallet\");\r\n        if (chainId !== 56) return tips(\"Please change network to your wallet.\");\r\n        var tx = await signedStakingContracts.unstake();\r\n        await tx.wait();\r\n        tips(\"Unstaking Success!\")\r\n        // staking success\r\n        setStatusApp({ ...statusApp, ido: { ...statusApp.ido, locked: false } });\r\n        getBalance();\r\n        getStakingInfo();\r\n    }\r\n\r\n    const Claim = async () => {\r\n        if (!active) return tips(\"Please connect your wallet\");\r\n        if (chainId !== 56) return tips(\"Please change network to your wallet.\");\r\n        var tx = await signedStakingContracts.unstake();\r\n        await tx.wait();\r\n        tips(\"You received staking reward\")\r\n        // staking success\r\n        setStatusApp({ ...statusApp, ido: { ...statusApp.ido, locked: false } });\r\n        getBalance();\r\n        getStakingInfo();\r\n    }\r\n\r\n    const stakingMax = async () => {\r\n        if (!active) return tips(\"Please connect your wallet\");\r\n        if (chainId !== 56) return tips(\"Please change network to your wallet.\");\r\n        var provider = new ethers.providers.Web3Provider(library.provider);\r\n        const signer = provider.getSigner();\r\n        var MyContract = THCTokenContract.connect(signer);\r\n        let tokenDecimals = (await MyContract.decimals()).toString();\r\n        let balance = await MyContract.balanceOf(account);\r\n        let bigBal = fromBigNum(balance, tokenDecimals);\r\n        console.log(bigBal)\r\n        // setStatusApp({ ...statusApp, stakeValue: statusApp.balance })\r\n        let THCBalanceOfWallet = Number(bigBal.toFixed(3));\r\n        setMaxTHCTotalAmountToWallet(THCBalanceOfWallet);\r\n    }\r\n\r\n    return (\r\n        <section className=\"py-7 bg-hero\" id=\"home\">\r\n            <div className=\"container\">\r\n                <div className='stake-panel'>\r\n                    <div className='panel-title'>\r\n                        <h3>Transhuman Coin Secured Staking Platform</h3>\r\n                    </div>\r\n\r\n                    <div className='period-btn-group'>\r\n                        <button className='btn btn-primary px-5' onClick={() => changeStatus(7, 1.2)}>7 Days</button>\r\n                        <button className='btn btn-primary px-5' onClick={() => changeStatus(30, 1.2 * 4 + 5)}>30 Days</button>\r\n                        <button className='btn btn-primary px-5' onClick={() => changeStatus(90, 1.2 * 13 + 20)}>90 Days</button>\r\n                    </div>\r\n                    <hr />\r\n                    <div className='apy-btn'>\r\n                        <button className='btn btn-primary btn-lg py-md-3 px-md-7 text-lg'>{statusApp.ido.apy}% APY*</button>\r\n                    </div>\r\n                    <div className='ido-list'>\r\n                        <div className='list-item'>\r\n                            <span>Lock period</span>\r\n                            <span>{statusApp.ido.lockPeriod} Days</span>\r\n                        </div>\r\n                        {/* <div className='list-item'>\r\n                            <span>Extends Lock On Registeration</span>\r\n                            <span>{statusApp.ido.extendsLockOnRegistration ? 'Yes' : 'No'}</span>\r\n                        </div> */}\r\n                        <div className='list-item'>\r\n                            <span>Early Unstake Fee</span>\r\n                            <span>{statusApp.ido.earlyUnstakeFee} % while 3days</span>\r\n                        </div>\r\n                        <div className='list-item'>\r\n                            <span>Unstake Fee</span>\r\n                            <span>{statusApp.ido.unstakeFee} %</span>\r\n                        </div>\r\n                        <div className='list-item'>\r\n                            <span>Status</span>\r\n                            <span>{statusApp.ido.locked ? 'Locked' : 'Unlocked'}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className={`panel-sm ${statusApp.ido.locked ? 'dis-ni' : ''}`}>\r\n                        <div className='amount-input-form'>\r\n                            <div>Balance: {statusApp.balance} THC</div>\r\n                            <input className='input-amount' type=\"text\" value={MaxTHCTotalAmountToWallet} onChange={(e) => setMaxTHCTotalAmountToWallet(Number(e.target.value))} />\r\n                        </div>\r\n                        <div className='max-btn-form'>\r\n                            <button className='btn btn-primary btn-xs' onClick={() => stakingMax()}>Max</button>\r\n                            <span>THC</span>\r\n                        </div>\r\n                        {/* <div className='panel-btn'>\r\n                            <button className='btn btn-primary' onClick={approve}>Approve</button>\r\n                        </div> */}\r\n                    </div>\r\n                    <div className={`panel-sm ${statusApp.ido.locked ? 'dis-ni' : ''}`}>\r\n                        <div className='create-btn-form'>\r\n                            <button onClick={handleStaking} className={`btn btn-primary btn-block `}>Create Account</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={`panel-sm ${statusApp.ido.locked ? '' : 'dis-ni'}`}>\r\n                        <div className='amount-input-form'>\r\n                            <div>Staked: {unStakeValue} THC</div>\r\n                            <input disabled style={{ background: \"transparent\" }} className='input-amount' type=\"text\" value={unStakeValue} />\r\n                        </div>\r\n                        {/* <div className='max-btn-form'>\r\n                            <button className='btn btn-primary btn-xs' onClick={() => setStatusApp({ ...statusApp, unStakeValue: statusApp.stakedAmount })}>Max</button>\r\n                            <span>THC</span>\r\n                        </div> */}\r\n                        <div className='panel-btn'>\r\n                            <button className='btn btn-primary' onClick={unstaking}>Unstake</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className={`panel-sm align-items-center ${statusApp.claimStatus ? '' : 'dis-ni'}`}>\r\n                        <div>\r\n                            <span>{0} THC</span>\r\n                        </div>\r\n                        <button className={`btn btn-primary px-6`} onClick={Claim}>Claim</button>\r\n                    </div>\r\n                    <div>\r\n                        <h3 style={{ textAlign: 'center' }}>APY is Dynamic*</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section >\r\n    );\r\n}\r\n\r\nexport default Staking;","import React from 'react'\r\n\r\nimport { Routes, Route, Link } from 'react-router-dom'\r\n/* import Cookies from 'universal-cookie' */\r\n\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport Layout from './Layout'\r\nimport Home from './Home'\r\nimport Staking from './Staking'\r\nimport './App.css';\r\nfunction NoMatch() {\r\n\treturn (\r\n\t\t<div style={{ maxWidth: \"1100px\", margin: \"50px auto\" }}>\r\n\t\t\t<h2>Nothing to see here!</h2>\r\n\t\t\t<p>\r\n\t\t\t\t<Link to=\"/\" style={{ color: \"#d090f0\" }}> {\"<\"} Go to the home page</Link>\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<Routes>\r\n\t\t\t\t<Route path=\"/\">\r\n\t\t\t\t\t<Route index element={<Staking />} />\r\n\t\t\t\t\t<Route path='*' element={<NoMatch />} />\r\n\t\t\t\t</Route>\r\n\t\t\t</Routes>\r\n\t\t\t<ToastContainer />\r\n\t\t</Layout>\r\n\t)\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n// import { Provider } from 'react-redux';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Web3ReactProvider } from '@web3-react/core';\r\nimport { Web3Provider } from '@ethersproject/providers';\r\nimport { WalletModalProvider } from \"./context/WalletModalContext\";\r\nimport ContextProvider from './context';\r\n// import { configureStore } from '@reduxjs/toolkit';\r\nimport App from './App';\r\nimport './index.scss';\r\nimport './responsive.scss';\r\n// \r\nfunction getLibrary(provider: any) {\r\n\tconst library = new Web3Provider(provider);\r\n\tlibrary.pollingInterval = 12000;\r\n\treturn library;\r\n}\r\nReactDOM.render(\r\n\t// <Provider store={store}>\r\n\t<React.StrictMode>\r\n\t\t<ContextProvider>\r\n\t\t\t<BrowserRouter>\r\n\t\t\t\t<Web3ReactProvider getLibrary={getLibrary}>\r\n\t\t\t\t\t<WalletModalProvider>\r\n\t\t\t\t\t\t<App />\r\n\t\t\t\t\t</WalletModalProvider>\r\n\t\t\t\t</Web3ReactProvider>\r\n\t\t\t</BrowserRouter>\r\n\t\t</ContextProvider>\r\n\t</React.StrictMode>,\r\n\t// </Provider>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}