{"version":3,"sources":["reportWebVitals.ts","config/index.js","util.tsx","assets/img/metamask.png","assets/img/trust.png","Layout.tsx","Staking/index.tsx","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","addrs","contracts","process","provider","ethers","providers","JsonRpcProvider","THCTokenContract","Contract","tokens","THC","address","abiTHC","THCStakingContract","staking","abiStaking","errHandler","err","console","log","code","tips","message","fromBigNum","value","d","parseFloat","utils","formatUnits","html","toast","position","autoClose","walletconnect","WalletConnectConnector","infuraId","bridge","supportedChainIds","rpc","qrcode","pollingInterval","Layout","props","React","useState","scrolling","setScrolling","up","setUp","disconnect_able","setDisconnect_able","useMetaMask","status","connect","account","chainId","ethereum","useWeb3React","activate","connector","useEffect","window","addEventListener","onScroll","scrollTop","scroll","document","body","WalletConnectModal","setWalletConnectModal","WalletModal","className","onClick","MetamaskConnect","src","Meta","alt","walletConnect","Trust","undefined","id","to","length","slice","children","style","color","target","href","Staking","signedTokenContracts","setSignedTokenContracts","signedStakingContracts","setSignedStakingContracts","unStakeValue","setUnStakeValue","THCTotalAmountToWallet","setTHCTotalAmountToWallet","MaxTHCTotalAmountToWallet","setMaxTHCTotalAmountToWallet","setReady","ido","lockPeriod","apy","extendsLockOnRegistration","earlyUnstakeFee","unstakeFee","locked","balance","stakedAmount","claimStatus","statusApp","setStatusApp","changeStatus","setSignedContracts","Web3Provider","getSigner","signer","getBalance","MyContract","decimals","tokenDecimals","toString","balanceOf","bigBal","THCBalanceOfWallet","Number","toFixed","getStakingInfo","stakers","stakeDate","nowUnixTime","nowTime","staked","stakes","stakingDate","period","handleStaking","stakeAmount","parseUnits","allowance","approve","sub","tx","wait","stake","unstaking","unstake","Claim","stakingMax","type","onChange","e","disabled","background","textAlign","NoMatch","maxWidth","margin","App","path","index","element","ReactDOM","render","StrictMode","getLibrary","library","getElementById"],"mappings":"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","file":"static/js/main.fffdf705.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { ethers } from 'ethers';\r\nimport contracts from \"./contracts.json\"\r\nimport abiTHC from './abi/THCtoken.json'\r\nimport abiStaking from './abi/staking.json'\r\n\r\nconst rpc = process.env.REACT_APP_NETWORK_URL;\r\nconst chainid = process.env.REACT_APP_CHAIN_ID;\r\nconst addrs = contracts[chainid];\r\n\r\nconst provider = new ethers.providers.JsonRpcProvider(rpc);\r\n\r\nconst THCTokenContract = new ethers.Contract(addrs.tokens.THC.address, abiTHC, provider);\r\nconst THCStakingContract = new ethers.Contract(addrs.staking.THC, abiStaking, provider);\r\n\r\n\r\nexport {\r\n    provider,\r\n    THCTokenContract,\r\n    THCStakingContract\r\n}","import { toast } from 'react-toastify';\r\nimport { ethers } from \"ethers\"\r\nimport { THCTokenContract } from \"./config\";\r\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector';\r\n\r\nexport const errHandler = (err: any) => {\r\n\tif (err) {\r\n\t\tconsole.log(err)\r\n\t\tif (err.code === 4001) {\r\n\t\t\ttips(\"you have cancelled the subscription\")\r\n\t\t} else if (err.code === 'NETWORK_ERROR') {\r\n\t\t\ttips(\"Please check your network connection!\")\r\n\t\t} else {\r\n\t\t\ttips(err.message)\r\n\t\t}\r\n\t} else {\r\n\t\tconsole.log(\"ignore error\")\r\n\t\ttips(\"ignore error\")\r\n\t}\r\n}\r\n\r\nexport const tokenData = {\r\n\tTHC: {\r\n\t\tcontract: THCTokenContract,\r\n\t\taddress: THCTokenContract.address,\r\n\t\tdecimals: 9\r\n\t}\r\n\r\n}\r\n/**\r\n * change data type from Number to BigNum \r\n * @param {Number} value - data that need to be change\r\n * @param {Number} d - decimals\r\n */\r\n// @ts-ignore\r\nexport const toValue = (val: any, token: any) => ethers.utils.parseUnits((val).toString(), tokenData[token].decimals)\r\nexport const toBigNum = (value: any, d: any) => ethers.utils.parseUnits(Number(value).toFixed(d), d);\r\n// @ts-ignore\r\nexport const fromValue = (val: any, d: any) => Number(ethers.utils.formatUnits((val).toString(), tokenData[token].decimals))\r\nexport const fromBigNum = (value: any, d: any) => parseFloat(ethers.utils.formatUnits(value, d));\r\n\r\nexport const tips = (html: string) => {\r\n\ttoast(html, {\r\n\t\tposition: \"top-right\",\r\n\t\tautoClose: 2000,\r\n\t\t/* hideProgressBar: false, */\r\n\t\t/* closeOnClick: true,\r\n\t\tpauseOnHover: true, */\r\n\t\t/* draggable: true, */\r\n\t\t/* progress: undefined, */\r\n\t});\r\n}\r\n\r\n// export const NF = (num:number,p:number=2) => Number(num).toFixed(p);// .replace(/(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\");\r\nexport const NF = (num: number, p: number = 2) => Number(num).toFixed(p).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\nexport const TF = (time: number, offset: number = 2) => {\r\n\tlet iOffset = Number(offset);\r\n\tlet date = time === undefined ? new Date(Date.now() * 1000 + (3600000 * iOffset)) : (typeof time === 'number' ? new Date(time * 1000 + (3600000 * iOffset)) : new Date(+time + (3600000 * iOffset)));\r\n\tlet y = date.getUTCFullYear();\r\n\tlet m = date.getUTCMonth() + 1;\r\n\tlet d = date.getUTCDate();\r\n\tlet hh = date.getUTCHours();\r\n\tlet mm = date.getUTCMinutes();\r\n\tlet ss = date.getUTCSeconds();\r\n\tlet dt = (\"0\" + m).slice(-2) + \"-\" + (\"0\" + d).slice(-2);\r\n\tlet tt = (\"0\" + hh).slice(-2) + \":\" + (\"0\" + mm).slice(-2) + \":\" + (\"0\" + ss).slice(-2);\r\n\treturn y + '-' + dt + ' ' + tt;\r\n}\r\n\r\nexport const copyToClipboard = (text: string) => {\r\n\tvar textField = document.createElement('textarea')\r\n\ttextField.innerText = text\r\n\tdocument.body.appendChild(textField)\r\n\ttextField.select()\r\n\tdocument.execCommand('copy')\r\n\ttextField.remove()\r\n\ttips(text);\r\n};\r\n\r\nexport const NETWORK_CHAIN_IDS = {\r\n\tmainnet: 1,\r\n\tropsten: 3,\r\n\trinkeby: 4,\r\n\tgoerli: 5,\r\n\tkovan: 42,\r\n\tlocalhost: 1337,\r\n};\r\n\r\nexport const INFURA_ID = '9aa3d95b3bc440fa88ea12eaa4456161';\r\nexport const INFURA_ENDPOINT = 'https://mainnet.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161';\r\nexport const walletconnect = new WalletConnectConnector({\r\n\tinfuraId: INFURA_ID,\r\n\tbridge: 'https://bridge.walletconnect.org',\r\n\tsupportedChainIds: [NETWORK_CHAIN_IDS.mainnet],\r\n\trpc: { 1: INFURA_ENDPOINT },\r\n\tqrcode: true,\r\n\t// @ts-ignore\r\n\tpollingInterval: 8000,\r\n});","export default __webpack_public_path__ + \"static/media/metamask.5ab39d28.png\";","export default __webpack_public_path__ + \"static/media/trust.1a83c4b6.png\";","import React, { useEffect, useState } from 'react';\r\nimport { Link, Outlet } from 'react-router-dom';\r\nimport { useMetaMask } from 'metamask-react';\r\n// import WalletConnect from \"@walletconnect/client\";//add\r\n// import WalletConnectQRCodeModal from \"@walletconnect/qrcode-modal\";//add\r\nimport { errHandler, tips, /* toValue, */ fromValue, fromBigNum, walletconnect } from './util';\r\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core';\r\n\r\n\r\nimport \"./layout.scss\"\r\nimport \"./assets/css/stars.css\"\r\nimport Meta from './assets/img/metamask.png';\r\nimport Trust from './assets/img/trust.png';\r\n\r\n\r\nconst Layout = (props: any) => {\r\n\r\n\tconst [scrolling, setScrolling] = React.useState<boolean>(false);\r\n\tconst [up, setUp] = React.useState<boolean>(false);\r\n\tconst [disconnect_able, setDisconnect_able] = React.useState<boolean>(false);\r\n\tconst { status, connect, account, chainId, ethereum } = useMetaMask();\r\n\tconst { activate, connector } = useWeb3React();\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.addEventListener('scroll', onScroll, true);\r\n\t}, [])\r\n\tlet scrollTop = 0;\r\n\tconst onScroll = () => {\r\n\t\tconst scroll = document.body.scrollTop;\r\n\t\tif (scroll > 80) {\r\n\t\t\tif (scroll > scrollTop) {\r\n\t\t\t\tsetScrolling(true);\r\n\t\t\t\tsetUp(false);\r\n\t\t\t} else {\r\n\t\t\t\tsetUp(true);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsetScrolling(false);\r\n\t\t\tsetUp(false);\r\n\t\t}\r\n\t\tscrollTop = scroll;\r\n\t}\r\n\r\n\tconst [WalletConnectModal, setWalletConnectModal] = useState(false);\r\n\r\n\tconst WalletModal = () => {\r\n\t\treturn (\r\n\t\t\t<div className='modal-continer' >\r\n\t\t\t\t<div className='modal-back' onClick={() => setWalletConnectModal(false)}></div>\r\n\r\n\t\t\t\t<div className=\"modal-body wallet-modal\" >\r\n\t\t\t\t\t<div className='justify'>\r\n\t\t\t\t\t\t<div className='wallet-icon-hover'>\r\n\t\t\t\t\t\t\t<a onClick={() => MetamaskConnect()}>\r\n\t\t\t\t\t\t\t\t<img src={Meta} className='justify wallet-imgs' alt='metamask' />\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='wallet-icon-hover'>\r\n\t\t\t\t\t\t\t<a onClick={walletConnect}>\r\n\t\t\t\t\t\t\t\t<img src={Trust} className='justify wallet-imgs' alt='Trust' />\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\tconst walletConnect = async () => {\r\n\t\ttry {\r\n\t\t\tconsole.log(\"wallet connection\", walletconnect);\r\n\t\t\treturn await activate(walletconnect, undefined, true);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t}\r\n\tconst MetamaskConnect = () => {\r\n\t\t// const disconnect = () => {\r\n\t\t// \twindow.ethereum.request({ method: \"eth_chainId\" });\r\n\t\t// }\r\n\t\tif (status === \"initializing\")\r\n\t\t\treturn tips('Synchronisation with MetaMask ongoing...');\r\n\r\n\t\tif (status === \"unavailable\")\r\n\t\t\treturn tips('MetaMask not avaliable');\r\n\t\tif (status === \"notConnected\") {\r\n\t\t\t// MetaMask connect\r\n\t\t\tsetDisconnect_able(false);\r\n\t\t\treturn connect();\r\n\t\t}\r\n\t\tif (status === \"connecting\")\r\n\t\t\treturn tips('Connecting...');\r\n\t\tif (status === \"connected\") {\r\n\t\t\tsetDisconnect_able(true);\r\n\t\t\tsetWalletConnectModal(false);\r\n\t\t\treturn tips('Connected');\r\n\t\t\t// //@ts-ignore\r\n\t\t\t// account && account.length !== 0 &&\r\n\t\t\t// //@ts-ignore\r\n\t\t\t// account.slice(0, 4) + '...' + account.slice(account.length - 4, account.length)\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tMetamaskConnect();\r\n\t}, [account])\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<header className={'smart-scroll' + (scrolling ? ' scrolling' : '') + (up ? ' up' : '')}>\r\n\t\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t\t<div className=\"background\">\r\n\t\t\t\t\t\t<div id=\"stars\"></div>\r\n\t\t\t\t\t\t<div id=\"stars2\"></div>\r\n\t\t\t\t\t\t<div id=\"stars3\"></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<nav className=\"navbar navbar-expand-md navbar-dark\">\r\n\t\t\t\t\t\t<Link className=\"navbar-brand heading-black\" to=\"./\">\r\n\t\t\t\t\t\t\tTHC Staking\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t{/* <button onClick={() => setWalletConnectModal(true)} className=\"navbar-toggler navbar-toggler-right border-0 collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-grid\"><rect x=\"3\" y=\"3\" width=\"7\" height=\"7\"></rect><rect x=\"14\" y=\"3\" width=\"7\" height=\"7\"></rect><rect x=\"14\" y=\"14\" width=\"7\" height=\"7\"></rect><rect x=\"3\" y=\"14\" width=\"7\" height=\"7\"></rect></svg>\r\n\t\t\t\t\t\t</button> */}\r\n\t\t\t\t\t\t<div className=\"navbar-collapse collapse dis-f\">\r\n\t\t\t\t\t\t\t<ul className=\"navbar-nav ml-auto flex-align-center align-items-center\">\r\n\t\t\t\t\t\t\t\t{/* <li className=\"nav-item\">\r\n\t\t\t\t\t\t\t\t\t<Link className=\"nav-link page-scroll\" to=\"./\">Home</Link>\r\n\t\t\t\t\t\t\t\t</li> */}\r\n\t\t\t\t\t\t\t\t{/* <li className=\"nav-item\">\r\n\t\t\t\t\t\t\t\t\t<Link className=\"nav-link page-scroll\" to=\"./staking\">Staking</Link>\r\n\t\t\t\t\t\t\t\t</li> */}\r\n\t\t\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t\t\t<a className=\"nav-link page-scroll p-0\">\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tdisconnect_able ?\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button onClick={() => { setDisconnect_able(false) }} className=\"btn btn-primary d-inline-flex flex-row align-items-center\" id=\"loginButton\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisconnect\r\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button onClick={() => setWalletConnectModal(true)} className=\"btn btn-primary d-inline-flex flex-row align-items-center\" id=\"loginButton\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tWallet Connect\r\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t\t\t<a className=\"nav-link page-scroll p-0\">\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t\tdisconnect_able && account && account.length !== 0 && account.slice(0, 4) + '...' + account.slice(account.length - 4, account.length)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t{/* account.slice(0, 4) + '...' + account.slice(account.length - 4, account.length) */}\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</nav>\r\n\t\t\t\t</div>\r\n\t\t\t</header>\r\n\t\t\t<main>\r\n\t\t\t\t{props.children}\r\n\t\t\t</main>\r\n\r\n\t\t\t<footer>\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-sm-5 mr-auto\">\r\n\t\t\t\t\t\t\t<h5>What is The Fire Under Transhuman Coin?</h5>\r\n\t\t\t\t\t\t\t<p className=\"text-muted\">Transhumanism is a philosophical movement devoted to promoting the research and development of robust human-enhancement technologies. Such technologies would augment or increase human sensory reception, emotive ability, or cognitive capacity as well as radically improve human health and extend human life spans.</p>\r\n\t\t\t\t\t\t\t<br /><br />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-sm-2\">\r\n\t\t\t\t\t\t\t<h5 style={{ color: \"#f2a900\" }}>Social</h5>\r\n\t\t\t\t\t\t\t<ul className=\"list-unstyled\">\r\n\t\t\t\t\t\t\t\t<li><a style={{ color: \"#f2a900\" }} target='_blank' href=\"http://t.me/buytranshumancoin\">Telegram</a></li>\r\n\t\t\t\t\t\t\t\t<li><a style={{ color: \"#f2a900\" }} target='_blank' href=\"https://discord.gg/mj72jmyMTw\">Discord</a></li>\r\n\t\t\t\t\t\t\t\t<li><a style={{ color: \"#f2a900\" }} target='_blank' href=\"https://www.twitter.com/transhumancoin\">Twitter</a></li>\r\n\t\t\t\t\t\t\t\t<li><a style={{ color: \"#f2a900\" }} target='_blank' href=\"https://coinmarketcap.com/currencies/transhuman-coin/\">Coin Market Cap</a></li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-sm-2\">\r\n\t\t\t\t\t\t\t<h5 style={{ color: \"cyan\" }}>Transhuman Coin</h5>\r\n\t\t\t\t\t\t\t<ul className=\"list-unstyled\">\r\n\t\t\t\t\t\t\t\t<li><a style={{ color: \"cyan\" }} target='_blank' href=\"https://www.transhumancoin.finance\">Transhuman Coin</a></li>\r\n\t\t\t\t\t\t\t\t<li><a style={{ color: \"cyan\" }} target='_blank' href=\"https://p2p.valid.finance\">Exchange Site</a></li>\r\n\t\t\t\t\t\t\t\t<li><a style={{ color: \"cyan\" }} target='_blank' href=\"https://valid.finance\">DeFi Platform</a></li>\r\n\t\t\t\t\t\t\t\t<li><a style={{ color: \"cyan\" }} target='_blank' href=\"https://www.transhumancoin.finance/whitepaperthc.pdf\">Read WhitePaper</a></li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-sm-2\">\r\n\t\t\t\t\t\t\t<h5 style={{ color: \"limegreen\" }}>Staking Contract</h5>\r\n\t\t\t\t\t\t\t<ul className=\"list-unstyled\">\r\n\t\t\t\t\t\t\t\t<li><a style={{ color: \"limegreen\" }} target='_blank' href=\"https://bscscan.com/address/#code\">Contract</a></li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"row mt-5\">\r\n\t\t\t\t\t\t<div className=\"col-12 text-muted text-center small-xl\">\r\n\t\t\t\t\t\t\t© 2022 - All Rights Reserved. Transhuman Coin\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</footer>\r\n\r\n\t\t\t{WalletConnectModal === true\r\n\t\t\t\t? <WalletModal />\r\n\t\t\t\t: <></>\r\n\t\t\t}\r\n\r\n\t\t\t<Outlet />\r\n\t\t</>)\r\n}\r\n\r\nexport default Layout","import React, { useState, useEffect } from 'react'\r\nimport './index.scss'\r\nimport '../responsive.scss'\r\nimport {\r\n    THCTokenContract, THCStakingContract,\r\n} from \"../config\"\r\nimport { errHandler, tips, /* toValue, */ fromValue, fromBigNum } from '../util';\r\nimport { ethers } from 'ethers';\r\nimport { Link, Outlet } from 'react-router-dom';\r\nimport { useMetaMask } from 'metamask-react';\r\n\r\ninterface IDOType {\r\n    lockPeriod: number\r\n    apy: number\r\n    extendsLockOnRegistration: boolean\r\n    earlyUnstakeFee: number\r\n    unstakeFee: number\r\n    locked: boolean\r\n}\r\ninterface StakingStatus {\r\n    ido: IDOType\r\n    balance: number\r\n    stakedAmount: number\r\n    THCTotalAmountToWallet: number\r\n    claimStatus: boolean\r\n}\r\n\r\n// const contracts = {\r\n//     THC: {\r\n//         stakeTokenContract: THCTokenContract,\r\n//         stakingContract: THCStakingContract,\r\n//     }\r\n// }\r\n\r\nconst Staking = () => {\r\n\r\n    const [signedTokenContracts, setSignedTokenContracts] = useState(THCTokenContract);\r\n    const [signedStakingContracts, setSignedStakingContracts] = useState(THCStakingContract);\r\n    const [unStakeValue, setUnStakeValue] = useState(0);\r\n    const [THCTotalAmountToWallet, setTHCTotalAmountToWallet] = useState(0);\r\n    const [MaxTHCTotalAmountToWallet, setMaxTHCTotalAmountToWallet] = useState(0);\r\n\r\n    const [ready, setReady] = useState(false);\r\n    const { status, connect, account, chainId, ethereum } = useMetaMask();\r\n    const [statusApp, setStatusApp] = React.useState<StakingStatus>({\r\n        ido: {\r\n            lockPeriod: 7,\r\n            apy: 1.2,\r\n            extendsLockOnRegistration: true,\r\n            earlyUnstakeFee: 36,\r\n            unstakeFee: 6,\r\n            locked: false,\r\n        },\r\n        balance: 0,\r\n        stakedAmount: 0,\r\n        THCTotalAmountToWallet: 0,\r\n        claimStatus: false,\r\n    })\r\n\r\n    const changeStatus = (lockPeriod: number, apy: number) => {\r\n        setStatusApp({ ...statusApp, ido: { ...statusApp.ido, lockPeriod: lockPeriod, apy: apy } })\r\n    }\r\n    useEffect(() => {\r\n        const setSignedContracts = async () => {\r\n            try {\r\n                const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n                const signer = await provider.getSigner();\r\n                var signedTokenContracts = (THCTokenContract).connect(signer);\r\n                var signedStakingContracts = (THCStakingContract).connect(signer);\r\n\r\n                setSignedTokenContracts(signedTokenContracts);\r\n                setSignedStakingContracts(signedStakingContracts);\r\n                setReady(true);\r\n            } catch (err) {\r\n                errHandler(err);\r\n            }\r\n        }\r\n\r\n        if (status === \"connected\") {\r\n            setSignedContracts();\r\n        }\r\n    }, [status, connect, account, chainId])\r\n\r\n    const getBalance = async () => {\r\n        try {\r\n            if (status === \"connected\") {\r\n                var provider = new ethers.providers.Web3Provider(window.ethereum);\r\n                const signer = provider.getSigner();\r\n                var MyContract = THCTokenContract.connect(signer);\r\n                let tokenDecimals = (await MyContract.decimals()).toString();\r\n                let balance = await MyContract.balanceOf(account);\r\n                let bigBal = fromBigNum(balance, tokenDecimals);\r\n                console.log(bigBal)\r\n                // setStatusApp({ ...statusApp, stakeValue: statusApp.balance })\r\n                let THCBalanceOfWallet = Number(bigBal.toFixed(3));\r\n                setTHCTotalAmountToWallet(THCBalanceOfWallet);\r\n            } else if (status === \"notConnected\") {\r\n                return tips('Please Connect Metamask Wallet');\r\n            }\r\n        } catch (err) {\r\n            console.log(\"context : getBalance error\", err);\r\n            // toast.error(\"context : getBalance error\", err);\r\n        }\r\n    }\r\n    const getStakingInfo = async () => {\r\n        try {\r\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n            const signer = await provider.getSigner();\r\n            var signedTokenContracts = (THCTokenContract).connect(signer);\r\n            var signedStakingContracts = (THCStakingContract).connect(signer);\r\n\r\n            var stakeDate = await signedStakingContracts.stakers(account);\r\n            var nowTime = await signedStakingContracts.nowUnixTime();\r\n            let tokenDecimals = (await signedTokenContracts.decimals()).toString();\r\n            // console.log('stakeDate : ');\r\n            // console.log(stakeDate);\r\n\r\n            // console.log('nowTime', nowTime);\r\n            // console.log('nowTime-', Number(nowTime));\r\n\r\n            // console.log('stakeDate.stakingDate', stakeDate.stakingDate);\r\n            // console.log('Number(stakeDate.stakingDate)', Number(stakeDate.stakingDate));\r\n\r\n            // console.log('stakeDate.stakes', stakeDate.stakes);\r\n\r\n            // console.log(typeof tokenDecimals)\r\n            // console.log('stakeDate.stakes', fromBigNum(stakeDate.stakes, Number(tokenDecimals)));\r\n\r\n            // console.log('(stakeDate.period) ', stakeDate.period);\r\n            // console.log('number(stakedate.period) ', Number(stakeDate.period));\r\n            let staked = fromBigNum(stakeDate.stakes, tokenDecimals);\r\n            console.log('typeof staked : ', typeof staked);\r\n\r\n            if (staked > 0) {\r\n                setUnStakeValue(staked);\r\n            }\r\n            // stakeDate.stakingDate -> unix time (1970.1.1 second)\r\n            // stakeDate.period -> staking date (7 , 30 , 90)\r\n            if (Number(nowTime) - Number(stakeDate.stakingDate) < (Number(stakeDate.period) * 3600 * 24)) {\r\n                setStatusApp({ ...statusApp, claimStatus: false });\r\n                // not claim\r\n            } else {\r\n                // you can receive claim\r\n                setStatusApp({ ...statusApp, claimStatus: true });\r\n            }\r\n\r\n            if (Number(stakeDate.stakingDate) !== 0) {\r\n                setStatusApp({ ...statusApp, ido: { ...statusApp.ido, locked: true } });\r\n            } else {\r\n                setStatusApp({ ...statusApp, ido: { ...statusApp.ido, locked: false } });\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getStakingInfo();\r\n        getBalance();\r\n    }, [status, connect, account, chainId])\r\n\r\n    const handleStaking = async () => {\r\n        try {\r\n            if (chainId !== '0x38') return tips(\"Please change network to BSC in metamask.\");\r\n            if (MaxTHCTotalAmountToWallet === 0) return tips(\"Please enter the amount of THC you want to stake\");\r\n            if (MaxTHCTotalAmountToWallet < 30000) return tips(\"Hi, you can't stake less than 30,000 THC\");\r\n            if (MaxTHCTotalAmountToWallet > 15000000) return tips(\"Hey! You can't stake more than 15,000,000 THC\");\r\n\r\n            if (status === \"notConnected\") return tips(\"Please connect your wallet\");\r\n            // if (loading) return tips(\"in progress\")\r\n            // setLoading(true);\r\n\r\n            // THC token check on users wallet\r\n            if (THCTotalAmountToWallet <= 0) return tips(\"Hi, You do not have enough THC Token to stake.\");\r\n            if (THCTotalAmountToWallet < MaxTHCTotalAmountToWallet) return tips(\"You have entered much amount than your wallet amount.\");\r\n            if (THCTotalAmountToWallet >= MaxTHCTotalAmountToWallet) {\r\n                if (statusApp.ido.locked) {\r\n                    return tips(\"Already created\");\r\n                } else {\r\n                    let tokenDecimals = (await signedTokenContracts.decimals()).toString();\r\n                    let stakeAmount = ethers.utils.parseUnits((MaxTHCTotalAmountToWallet).toString(), tokenDecimals)\r\n                    var allowance = await signedTokenContracts.allowance(account, signedStakingContracts.address);\r\n                    if (allowance.toString() !== \"0\" && allowance < stakeAmount) {\r\n                        stakeAmount = allowance;\r\n                    }\r\n                    if (allowance < stakeAmount) {\r\n                        var tx = await signedTokenContracts.approve(signedStakingContracts.address, stakeAmount.sub(allowance))\r\n                        if (tx != null) {\r\n                            await tx.wait();\r\n                        }\r\n                    }\r\n\r\n                    await staking(stakeAmount);\r\n                }\r\n            }\r\n\r\n        } catch (err) {\r\n            errHandler(err)\r\n        }\r\n        // setLoading(false);\r\n    }\r\n\r\n    const staking = async (stakeAmount: any) => {\r\n        try {\r\n            console.log('statusApp.ido.lockPeriod, stakeAmount')\r\n            console.log(statusApp.ido.lockPeriod, stakeAmount)\r\n            var tx = await signedStakingContracts.stake(statusApp.ido.lockPeriod, stakeAmount)\r\n            if (tx != null) {\r\n                await tx.wait();\r\n                tips(\"Staking account created. Success!\")\r\n                // staking success\r\n                setStatusApp({ ...statusApp, ido: { ...statusApp.ido, locked: true } });\r\n                getBalance();\r\n                getStakingInfo();\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            errHandler(error)\r\n\r\n        }\r\n    }\r\n\r\n    const approve = () => {\r\n\r\n    }\r\n\r\n    const unstaking = async () => {\r\n        if (status === \"notConnected\") return tips(\"Please connect your wallet\");\r\n        if (chainId !== '0x38') return tips(\"Please change network to BSC in metamask.\");\r\n        var tx = await signedStakingContracts.unstake();\r\n        await tx.wait();\r\n        tips(\"Unstaking Success!\")\r\n        // staking success\r\n        setStatusApp({ ...statusApp, ido: { ...statusApp.ido, locked: false } });\r\n        getBalance();\r\n        getStakingInfo();\r\n    }\r\n\r\n    const Claim = async () => {\r\n        if (status === \"notConnected\") return tips(\"Please connect your wallet\");\r\n        if (chainId !== '0x38') return tips(\"Please change network to BSC in metamask.\");\r\n        var tx = await signedStakingContracts.unstake();\r\n        await tx.wait();\r\n        tips(\"You received staking reward\")\r\n        // staking success\r\n        setStatusApp({ ...statusApp, ido: { ...statusApp.ido, locked: false } });\r\n        getBalance();\r\n        getStakingInfo();\r\n    }\r\n\r\n    const stakingMax = async () => {\r\n        if (chainId !== '0x38') return tips(\"Please change network to BSC in metamask.\");\r\n        var provider = new ethers.providers.Web3Provider(window.ethereum);\r\n        const signer = provider.getSigner();\r\n        var MyContract = THCTokenContract.connect(signer);\r\n        let tokenDecimals = (await MyContract.decimals()).toString();\r\n        let balance = await MyContract.balanceOf(account);\r\n        let bigBal = fromBigNum(balance, tokenDecimals);\r\n        console.log(bigBal)\r\n        // setStatusApp({ ...statusApp, stakeValue: statusApp.balance })\r\n        let THCBalanceOfWallet = Number(bigBal.toFixed(3));\r\n        setMaxTHCTotalAmountToWallet(THCBalanceOfWallet);\r\n    }\r\n\r\n    return (\r\n        <section className=\"py-7 bg-hero\" id=\"home\">\r\n            <div className=\"container\">\r\n                <div className='stake-panel'>\r\n                    <div className='panel-title'>\r\n                        <h3>Transhuman Coin Secured Staking Platform</h3>\r\n                    </div>\r\n\r\n                    <div className='period-btn-group'>\r\n                        <button className='btn btn-primary px-5' onClick={() => changeStatus(7, 1.2)}>7 Days</button>\r\n                        <button className='btn btn-primary px-5' onClick={() => changeStatus(30, 1.2 * 4 + 5)}>30 Days</button>\r\n                        <button className='btn btn-primary px-5' onClick={() => changeStatus(90, 1.2 * 13 + 20)}>90 Days</button>\r\n                    </div>\r\n                    <hr />\r\n                    <div className='apy-btn'>\r\n                        <button className='btn btn-primary btn-lg py-md-3 px-md-7 text-lg'>{statusApp.ido.apy}% APY*</button>\r\n                    </div>\r\n                    <div className='ido-list'>\r\n                        <div className='list-item'>\r\n                            <span>Lock period</span>\r\n                            <span>{statusApp.ido.lockPeriod} Days</span>\r\n                        </div>\r\n                        {/* <div className='list-item'>\r\n                            <span>Extends Lock On Registeration</span>\r\n                            <span>{statusApp.ido.extendsLockOnRegistration ? 'Yes' : 'No'}</span>\r\n                        </div> */}\r\n                        <div className='list-item'>\r\n                            <span>Early Unstake Fee</span>\r\n                            <span>{statusApp.ido.earlyUnstakeFee} % while 3days</span>\r\n                        </div>\r\n                        <div className='list-item'>\r\n                            <span>Unstake Fee</span>\r\n                            <span>{statusApp.ido.unstakeFee} %</span>\r\n                        </div>\r\n                        <div className='list-item'>\r\n                            <span>Status</span>\r\n                            <span>{statusApp.ido.locked ? 'Locked' : 'Unlocked'}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className={`panel-sm ${statusApp.ido.locked ? 'dis-ni' : ''}`}>\r\n                        <div className='amount-input-form'>\r\n                            <div>Balance: {statusApp.balance} THC</div>\r\n                            <input className='input-amount' type=\"text\" value={MaxTHCTotalAmountToWallet} onChange={(e) => setMaxTHCTotalAmountToWallet(Number(e.target.value))} />\r\n                        </div>\r\n                        <div className='max-btn-form'>\r\n                            <button className='btn btn-primary btn-xs' onClick={() => stakingMax()}>Max</button>\r\n                            <span>THC</span>\r\n                        </div>\r\n                        {/* <div className='panel-btn'>\r\n                            <button className='btn btn-primary' onClick={approve}>Approve</button>\r\n                        </div> */}\r\n                    </div>\r\n                    <div className={`panel-sm ${statusApp.ido.locked ? 'dis-ni' : ''}`}>\r\n                        <div className='create-btn-form'>\r\n                            <button onClick={handleStaking} className={`btn btn-primary btn-block `}>Create Account</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={`panel-sm ${statusApp.ido.locked ? '' : 'dis-ni'}`}>\r\n                        <div className='amount-input-form'>\r\n                            <div>Staked: {unStakeValue} THC</div>\r\n                            <input disabled style={{ background: \"transparent\" }} className='input-amount' type=\"text\" value={unStakeValue} />\r\n                        </div>\r\n                        {/* <div className='max-btn-form'>\r\n                            <button className='btn btn-primary btn-xs' onClick={() => setStatusApp({ ...statusApp, unStakeValue: statusApp.stakedAmount })}>Max</button>\r\n                            <span>THC</span>\r\n                        </div> */}\r\n                        <div className='panel-btn'>\r\n                            <button className='btn btn-primary' onClick={unstaking}>Unstake</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={`panel-sm align-items-center ${statusApp.claimStatus ? '' : 'dis-ni'}`}>\r\n                        <div>\r\n                            <span>{0} THC</span>\r\n                        </div>\r\n                        <button className={`btn btn-primary px-6`} onClick={Claim}>Claim</button>\r\n                    </div>\r\n                    {/* <div className='ido-list'>\r\n                        <div className='list-item'>\r\n                            <span>Started Date</span>\r\n                            <span>{statusApp.ido.lockPeriod} Days</span>\r\n                        </div>\r\n                        <div className='list-item'>\r\n                            <span>Early Unstake Fee</span>\r\n                            <span>{statusApp.ido.earlyUnstakeFee} % while 3days from locked</span>\r\n                        </div>\r\n                        <div className='list-item'>\r\n                            <span>Unstake Fee</span>\r\n                            <span>{statusApp.ido.unstakeFee} %</span>\r\n                        </div>\r\n                        <div className='list-item'>\r\n                            <span>Status</span>\r\n                            <span>{statusApp.ido.locked ? 'Locked' : 'Unlocked'}</span>\r\n                        </div>\r\n                    </div> */}\r\n\r\n                    <div>\r\n                        <h3 style={{ textAlign: 'center' }}>APY is Dynamic*</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section >\r\n    );\r\n}\r\n\r\nexport default Staking;","import React from 'react'\r\n\r\nimport { Routes, Route, Link } from 'react-router-dom'\r\n/* import Cookies from 'universal-cookie' */\r\n\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport Layout from './Layout'\r\nimport Home from './Home'\r\nimport Staking from './Staking'\r\nimport './App.css';\r\nfunction NoMatch() {\r\n\treturn (\r\n\t\t<div style={{ maxWidth: \"1100px\", margin: \"50px auto\" }}>\r\n\t\t\t<h2>Nothing to see here!</h2>\r\n\t\t\t<p>\r\n\t\t\t\t<Link to=\"/\" style={{ color: \"#d090f0\" }}> {\"<\"} Go to the home page</Link>\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<Routes>\r\n\t\t\t\t<Route path=\"/\">\r\n\t\t\t\t\t<Route index element={<Staking />} />\r\n\t\t\t\t\t<Route path='*' element={<NoMatch />} />\r\n\t\t\t\t</Route>\r\n\t\t\t</Routes>\r\n\t\t\t<ToastContainer />\r\n\t\t</Layout>\r\n\t)\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { MetaMaskProvider } from 'metamask-react';\r\n// import { Provider } from 'react-redux';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Web3ReactProvider } from '@web3-react/core';\r\nimport { Web3Provider } from '@ethersproject/providers';\r\n\r\n// import { configureStore } from '@reduxjs/toolkit';\r\nimport App from './App';\r\nimport './index.scss';\r\nimport './responsive.scss';\r\n// \r\nfunction getLibrary(provider: any) {\r\n\tconst library = new Web3Provider(provider);\r\n\tlibrary.pollingInterval = 12000;\r\n\treturn library;\r\n}\r\nReactDOM.render(\r\n\t// <Provider store={store}>\r\n\t<React.StrictMode>\r\n\t\t<BrowserRouter>\r\n\t\t\t<Web3ReactProvider getLibrary={getLibrary}>\r\n\t\t\t\t<MetaMaskProvider>\r\n\t\t\t\t\t<App />\r\n\t\t\t\t</MetaMaskProvider>\r\n\t\t\t</Web3ReactProvider>\r\n\t\t</BrowserRouter>\r\n\t</React.StrictMode>,\r\n\t// </Provider>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}